/*Generated by WaveMaker Studio*/

package com.core_scorecard.core_scorecard.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.core_scorecard.core_scorecard.*;

/**
 * Service object for domain model class ScorecardWebform.
 * @see com.core_scorecard.core_scorecard.ScorecardWebform
 */

public interface ScorecardWebformService {
   /**
	 * Creates a new scorecardwebform.
	 * 
	 * @param created
	 *            The information of the created scorecardwebform.
	 * @return The created scorecardwebform.
	 */
	public ScorecardWebform create(ScorecardWebform created);

	/**
	 * Deletes a scorecardwebform.
	 * 
	 * @param scorecardwebformId
	 *            The id of the deleted scorecardwebform.
	 * @return The deleted scorecardwebform.
	 * @throws EntityNotFoundException
	 *             if no scorecardwebform is found with the given id.
	 */
	public ScorecardWebform delete(Integer scorecardwebformId) throws EntityNotFoundException;

	/**
	 * Finds all scorecardwebforms.
	 * 
	 * @return A list of scorecardwebforms.
	 */
	public Page<ScorecardWebform> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ScorecardWebform> findAll(Pageable pageable);
	
	/**
	 * Finds scorecardwebform by id.
	 * 
	 * @param id
	 *            The id of the wanted scorecardwebform.
	 * @return The found scorecardwebform. If no scorecardwebform is found, this method returns
	 *         null.
	 */
	public ScorecardWebform findById(Integer id) throws EntityNotFoundException;
	/**
	 * Updates the information of a scorecardwebform.
	 * 
	 * @param updated
	 *            The information of the updated scorecardwebform.
	 * @return The updated scorecardwebform.
	 * @throws EntityNotFoundException
	 *             if no scorecardwebform is found with given id.
	 */
	public ScorecardWebform update(ScorecardWebform updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the scorecardwebforms in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the scorecardwebform.
	 */

	public long countAll();


    public Page<ScorecardWebform> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

