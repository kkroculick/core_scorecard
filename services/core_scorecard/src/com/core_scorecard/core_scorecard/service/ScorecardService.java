/*American Express*/

package com.core_scorecard.core_scorecard.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.core_scorecard.core_scorecard.*;

/**
 * Service object for domain model class Scorecard.
 * @see com.core_scorecard.core_scorecard.Scorecard
 */

public interface ScorecardService {
   /**
	 * Creates a new scorecard.
	 * 
	 * @param created
	 *            The information of the created scorecard.
	 * @return The created scorecard.
	 */
	public Scorecard create(Scorecard created);

	/**
	 * Deletes a scorecard.
	 * 
	 * @param scorecardId
	 *            The id of the deleted scorecard.
	 * @return The deleted scorecard.
	 * @throws EntityNotFoundException
	 *             if no scorecard is found with the given id.
	 */
	public Scorecard delete(Integer scorecardId) throws EntityNotFoundException;

	/**
	 * Finds all scorecards.
	 * 
	 * @return A list of scorecards.
	 */
	public Page<Scorecard> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Scorecard> findAll(Pageable pageable);
	
	/**
	 * Finds scorecard by id.
	 * 
	 * @param id
	 *            The id of the wanted scorecard.
	 * @return The found scorecard. If no scorecard is found, this method returns
	 *         null.
	 */
	public Scorecard findById(Integer id) throws EntityNotFoundException;
	/**
	 * Updates the information of a scorecard.
	 * 
	 * @param updated
	 *            The information of the updated scorecard.
	 * @return The updated scorecard.
	 * @throws EntityNotFoundException
	 *             if no scorecard is found with given id.
	 */
	public Scorecard update(Scorecard updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the scorecards in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the scorecard.
	 */

	public long countAll();


    public Page<Scorecard> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

